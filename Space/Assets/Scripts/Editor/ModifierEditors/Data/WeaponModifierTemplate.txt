// =====================================================
// =====!!! This file was generated. No touchy. !!!=====
// =====================================================
public struct WeaponModifier
{
	public enum ModifierNames
	{
\ModifierNames\
		NUM_MODIFIERS
	}

	public enum Stats
	{
\StatNames\
		NUM_STATS,
\AltStatNames\
	}

	public const int GENERIC_START = 0;
	public const int GENERIC_END = (int)ModifierNames.\GENERIC_END\ + 1;
	public const int PROJ_WEP_START = GENERIC_END;
	public const int PROJ_WEP_END = (int)ModifierNames.\PROJ_WEP_END\ + 1;
	public const int SCATTER_WEP_START = PROJ_WEP_END;
	public const int SCATTER_WEP_END = (int)ModifierNames.\SCATTER_WEP_END\ + 1;
	public const int MISSILE_WEP_START = PROJ_WEP_START;
	public const int MISSILE_WEP_END = PROJ_WEP_END;
	public const int MINE_WEP_START = SCATTER_WEP_END;
	public const int MINE_WEP_END = (int)ModifierNames.\MINE_WEP_END\ + 1;
	public const int BEAM_WEP_START = MINE_WEP_END;
	public const int BEAM_WEP_END = (int)ModifierNames.NUM_MODIFIERS;
	
	public static readonly float[,] modifiers = {
\StatValues\
	};

	public static void GetModifiedName( ModifierNames modName, string weaponName, out string outputString )
	{
		if( modName == ModifierNames.DEFAULT )
		{
			outputString = weaponName;
			return;
		}
		
		string name = modName.ToString();
		bool isPrefix = ( name.IndexOf( "_suffix" ) == -1 );
		name = name.Replace( "_", " " );

		if( isPrefix )
		{
			outputString = name + " " + weaponName;
		}
		else
		{
			name = name.Replace( " suffix", "" );
			outputString = weaponName + " " + name;
		}
	}
	
	public static float GetModifierValue( ModifierNames modName, Stats stat )
	{
		return modifiers[ (int)modName, (int)stat ];
	}
}
